polygon(x=c(clust2_s50mean$bs_prop - clust2_s50mean$confint_bsprop,rev(clust2_s50mean$bs_prop + clust2_s50mean$confint_bsprop)),y=c(clust2_s50mean$Depth,rev(clust2_s50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.11))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_s50mean$bs_prop, clust2_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.4), ylim=c(1000,0), col="#00CCCC")
# Combine cluster results with daytime environmental variables
daytime <- read.csv("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/FullWC_Daytime_daymeans_sa_env.csv")
formap50 = data.frame(cbind(rownames(ABC50day_matclust_south), ABC50day_matclust_south$cluster))
formap50 = cbind(formap50, daytime$lat, daytime$lon)
View(daytime2)
View(daytime)
daytime2 = daytime[,-c(1,2,4,7,11,15)]
formap50 = cbind(formap50, daytime2$lat, daytime2$lon)
formap50 = data.frame(cbind(rownames(ABC50day_matclust_south), ABC50day_matclust_south$cluster))
View(formap50)
formap50 = cbind(formap50, daytime2$lat, daytime2$lon)
View(daytime2)
daytime2 = daytime[-c(1,2,4,7,11,15),]
formap50 = data.frame(cbind(rownames(ABC50day_matclust_south), ABC50day_matclust_south$cluster))
formap50 = cbind(formap50, daytime2$lat, daytime2$lon)
names(formap50)[1] <- "date"
names(formap50)[2] <- "cluster"
names(formap50)[3] <- "latmean"
names(formap50)[4] <- "lonmean"
ggplot(data = world) + geom_link2(data = formap50, aes(x = lonmean, y = latmean, colour = cluster, group = 1), lwd = 2.5, lineend = "round") +
coord_fixed(ratio = 1)  + geom_sf() + coord_sf(xlim = c(-118.2, -115.6), ylim = c(9.7, 11.3)) +
theme_bw() + theme(panel.background = element_rect(fill = 'light blue'),
axis.text = element_text(size = 12), axis.title = element_text(size = 14))
ggplot(data = world) + geom_point(data = formap50, aes(x = lonmean, y = latmean, colour = cluster, group = 1), lwd = 2.5, lineend = "round") +
coord_fixed(ratio = 1)  + geom_sf() + coord_sf(xlim = c(-118.2, -115.6), ylim = c(9.7, 11.3)) +
theme_bw() + theme(panel.background = element_rect(fill = 'light blue'),
axis.text = element_text(size = 12), axis.title = element_text(size = 14))
ggplot(data = world) + geom_point(data = formap50, aes(x = lonmean, y = latmean, colour = cluster, group = 1), lwd = 3, lineend = "round") +
coord_fixed(ratio = 1)  + geom_sf() + coord_sf(xlim = c(-118.2, -115.6), ylim = c(9.7, 11.3)) +
theme_bw() + theme(panel.background = element_rect(fill = 'light blue'),
axis.text = element_text(size = 12), axis.title = element_text(size = 14))
View(daytime2)
View(daytime)
##################################
# Combine cluster groups with environmental data
daytime2 = cbind(daytime2, ABC50day_matclust_south$cluster)
View(daytime2)
names(daytime2)[14] <- "cluster"
daytime2$cluster = as.factor(daytime2$cluster)
daytime2$date = as.Date(daytime2$date)
daytime2$FullWC_sa_km = daytime2$FullWC_sa*1000000
# Migprop datasets
Migprop_env_south = merge(Migprop_env_south, daytime2[,c(1,14)], by = "date") # add cluster column
# Migprop datasets
Migprop_env_south = merge(Migprop_env, daytime2[,c(1,14)], by = "date") # add cluster column
View(Migprop_env_south)
# Migprop datasets
Migprop_env_south = merge(Migprop_env[,-8], daytime2[,c(1,14)], by = "date") # add cluster column
View(Migprop_env_south)
ggboxplot(Migprop_env_south, x = "cluster", y = "Migprop",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Migrating Proportion")
group_by(Migprop_env_south, cluster) %>%
summarise(
count = n(),
mean = mean(Migprop, na.rm = TRUE),
sd = sd(Migprop, na.rm = TRUE),
median = median(Migprop, na.rm = TRUE),
IQR = IQR(Migprop, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(Migprop_env_south$Migprop, Migprop_env_south$cluster, p.adjust.method = "BH")
ggboxplot(daytime2, x = "cluster", y = "FullWC_sa_km",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Migrating Proportion")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(FullWC_sa_km, na.rm = TRUE),
sd = sd(FullWC_sa_km, na.rm = TRUE),
median = median(FullWC_sa_km, na.rm = TRUE),
IQR = IQR(FullWC_sa_km, na.rm = TRUE)
)
group_by(daytime, cluster) %>%
summarise(
count = n(),
mean = mean(FullWC_sa_km, na.rm = TRUE),
sd = sd(FullWC_sa_km, na.rm = TRUE),
median = median(FullWC_sa_km, na.rm = TRUE),
IQR = IQR(FullWC_sa_km, na.rm = TRUE)
)
daytime = cbind(daytime, ABC50day_matclust$cluster)
names(daytime)[14] <- "cluster"
daytime$cluster = as.factor(daytime$cluster)
daytime$date = as.Date(daytime$date)
daytime$FullWC_sa_km = daytime$FullWC_sa*1000000
group_by(daytime, cluster) %>%
summarise(
count = n(),
mean = mean(FullWC_sa_km, na.rm = TRUE),
sd = sd(FullWC_sa_km, na.rm = TRUE),
median = median(FullWC_sa_km, na.rm = TRUE),
IQR = IQR(FullWC_sa_km, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$FullWC_sa_km, daytime2$cluster, p.adjust.method = "BH")
ggboxplot(daytime2, x = "cluster", y = "WMD",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Migrating Proportion")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(WMD, na.rm = TRUE),
sd = sd(WMD, na.rm = TRUE),
median = median(WMD, na.rm = TRUE),
IQR = IQR(WMD, na.rm = TRUE)
)
ggboxplot(daytime2, x = "cluster", y = "WMD",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
ggboxplot(daytime2, x = "cluster", y = "FullWC_sa_km",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Total Backscatter (m2 km-2)")
ggboxplot(daytime2, x = "cluster", y = "WMD", ylim = c(390,290),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
ggboxplot(daytime2, x = "cluster", y = "WMD", ylim = c(390,280),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
ggboxplot(daytime2, x = "cluster", y = "WMD", ylim = c(400,290),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
ggboxplot(daytime2, x = "cluster", y = "WMD", ylim = c(400,300),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
View(daytime2)
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(WMD, na.rm = TRUE),
sd = sd(WMD, na.rm = TRUE),
median = median(WMD, na.rm = TRUE),
IQR = IQR(WMD, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$WMD, daytime2$cluster, p.adjust.method = "BH")
ggboxplot(daytime, x = "cluster", y = "WMD",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
ggboxplot(daytime, x = "cluster", y = "WMD", ylim = c(390, 300),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "WMD (m)")
View(daytime)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime$WMD, daytime$cluster, p.adjust.method = "BH")
group_by(daytime, cluster) %>%
summarise(
count = n(),
mean = mean(WMD, na.rm = TRUE),
sd = sd(WMD, na.rm = TRUE),
median = median(WMD, na.rm = TRUE),
IQR = IQR(WMD, na.rm = TRUE)
)
chart.Correlation(daytime2[,c(8:11,13)])
?chart.Correlation
.88^2
.89^2
ggboxplot(daytime2, x = "cluster", y = "lat",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Latitude")
ggboxplot(daytime2, x = "cluster", y = "SAL_SBE37_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Latitude")
ggboxplot(daytime2, x = "cluster", y = "SAL_SBE37_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Salinity (PSU)")
s = group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(SAL_SBE37_MEAN, na.rm = TRUE),
sd = sd(SAL_SBE37_MEAN, na.rm = TRUE),
median = median(SAL_SBE37_MEAN, na.rm = TRUE),
IQR = IQR(SAL_SBE37_MEAN, na.rm = TRUE)
)
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(SAL_SBE37_MEAN, na.rm = TRUE),
sd = sd(SAL_SBE37_MEAN, na.rm = TRUE),
median = median(SAL_SBE37_MEAN, na.rm = TRUE),
IQR = IQR(SAL_SBE37_MEAN, na.rm = TRUE)
)
ggboxplot(daytime2, x = "cluster", y = "SAL_SBE37_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Salinity (PSU)")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(SAL_SBE37_MEAN, na.rm = TRUE),
sd = sd(SAL_SBE37_MEAN, na.rm = TRUE),
median = median(SAL_SBE37_MEAN, na.rm = TRUE),
IQR = IQR(SAL_SBE37_MEAN, na.rm = TRUE)
)
ggboxplot(daytime2, x = "cluster", y = "SAL_SBE37_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "Salinity (PSU)")
boxplot(daytime2$SAL_SBE37_MEAN ~ daytime2$cluster)
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(SAL_SBE37_MEAN, na.rm = TRUE),
sd = sd(SAL_SBE37_MEAN, na.rm = TRUE),
median = median(SAL_SBE37_MEAN, na.rm = TRUE),
IQR = IQR(SAL_SBE37_MEAN, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$lat, daytime2$cluster, p.adjust.method = "BH")
View(daytime2)
median(subset(daytime2, cluster == 1)$SAL_SBE37_MEAN)
median(subset(daytime2, cluster == 1)$SAL_SBE37_MEAN)
median(subset(daytime2, cluster == 2)$SAL_SBE37_MEAN)
ggboxplot(daytime2, x = "cluster", y = "TEMP_SBE37_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "SST (Â°C)")
ggboxplot(daytime2, x = "cluster", y = "TEMP_SBE37_MEAN", ylim = c(27,28.3),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "SST (Â°C)")
ggboxplot(daytime2, x = "cluster", y = "TEMP_SBE37_MEAN", ylim = c(27,28.5),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "SST (Â°C)")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(TEMP_SBE37_MEAN, na.rm = TRUE),
sd = sd(TEMP_SBE37_MEAN, na.rm = TRUE),
median = median(TEMP_SBE37_MEAN, na.rm = TRUE),
IQR = IQR(TEMP_SBE37_MEAN, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$TEMP_SBE37_MEAN, daytime2$cluster, p.adjust.method = "BH")
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$SAL_SBE37_MEAN, daytime2$cluster, p.adjust.method = "BH")
ggboxplot(daytime2, x = "cluster", y = "PAR_AIR_MEAN", ylim = c(27,28.5),
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "SST (Â°C)")
ggboxplot(daytime2, x = "cluster", y = "PAR_AIR_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "SST (Â°C)")
ggboxplot(daytime2, x = "cluster", y = "PAR_AIR_MEAN",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "PAR (W m2")
ggboxplot(daytime2, x = "cluster", y = "chla_sat_8day",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "PAR (W m2")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(chla_sat_8day, na.rm = TRUE),
sd = sd(chla_sat_8day, na.rm = TRUE),
median = median(chla_sat_8day, na.rm = TRUE),
IQR = IQR(chla_sat_8day, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$chla_sat_8day, daytime2$cluster, p.adjust.method = "BH")
ggboxplot(daytime2, x = "cluster", y = "chla_sat_8day",
color = "cluster", palette = c("red", "#00CCCC"),
order = c("1", "2"),
xlab = "Cluster", ylab = "8-day Satellite Chlorophyll (mg m^3)")
group_by(daytime2, cluster) %>%
summarise(
count = n(),
mean = mean(chla_sat_8day, na.rm = TRUE),
sd = sd(chla_sat_8day, na.rm = TRUE),
median = median(chla_sat_8day, na.rm = TRUE),
IQR = IQR(chla_sat_8day, na.rm = TRUE)
)
# Pairwise Wilcox test to see which groups are significantly different from each other
pairwise.wilcox.test(daytime2$chla_sat_8day, daytime2$cluster, p.adjust.method = "BH")
View(daytime2)
################################
# Nighttime Data
setwd("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Layer_Structure")
ABC50night_scaleclust = read.csv("FullDataset_50m_scaled_clusters_night.csv", row.names = 1)
ABC50night_matclust = read.csv("FullDataset_50m_AreaBackscatter_clusters_night.csv", row.names = 1)
# Split data into cluster groups, average, and plot backscatter profiles
# 50m
clust1_50 = data.frame(t(subset(ABC50night_matclust, cluster == 1)[,-21]))
clust2_50 = data.frame(t(subset(ABC50night_matclust, cluster == 2)[,-21]))
library(dplyr)
library(matrixStats)
library(plotrix)
clust1_50 = 1000000*clust1_50 # convert m2/m2 to m2/km2
clust1_50mean <- clust1_50 %>%
mutate(Depth = rownames(clust1_50), ABC = rowMeans(clust1_50), Sa = 10*log10(rowMeans(clust1_50)), se_ABC=rowSds(as.matrix(clust1_50))/sqrt(ncol(clust1_50)), confint_ABC=1.96*se_ABC)
clust1_50mean = clust1_50mean[,-c(1:17)]
clust1_50mean$Depth = as.numeric(clust1_50mean$Depth)
# Split data into cluster groups, average, and plot backscatter profiles
# 50m
clust1_50 = data.frame(t(subset(ABC50night_matclust, cluster == 1)[,-21]))
clust1_50 = 1000000*clust1_50 # convert m2/m2 to m2/km2
clust1_50mean <- clust1_50 %>%
mutate(Depth = substring(rownames(clust1_50),2), ABC = rowMeans(clust1_50), Sa = 10*log10(rowMeans(clust1_50)), se_ABC=rowSds(as.matrix(clust1_50))/sqrt(ncol(clust1_50)), confint_ABC=1.96*se_ABC)
clust1_50mean = clust1_50mean[,-c(1:17)]
clust1_50mean$Depth = as.numeric(clust1_50mean$Depth)
View(clust1_50mean)
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,10), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_50mean$ABC - clust1_50mean$confint_ABC,rev(clust1_50mean$ABC + clust1_50mean$confint_ABC)),y=c(clust1_50mean$Depth,rev(clust1_50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,10), ylim=c(1000,0), col="red")
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,20), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_50mean$ABC - clust1_50mean$confint_ABC,rev(clust1_50mean$ABC + clust1_50mean$confint_ABC)),y=c(clust1_50mean$Depth,rev(clust1_50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,20), ylim=c(1000,0), col="red")
#initialize plot
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,30), ylim=c(1000,0), col="red")
#initialize plot
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,25), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_50mean$ABC - clust1_50mean$confint_ABC,rev(clust1_50mean$ABC + clust1_50mean$confint_ABC)),y=c(clust1_50mean$Depth,rev(clust1_50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 1",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,25), ylim=c(1000,0), col="red")
clust2_50 = 1000000*clust2_50
clust2_50mean <- clust2_50 %>%
mutate(Depth = substring(rownames(clust2_50),2), ABC = rowMeans(clust2_50), Sa = 10*log10(rowMeans(clust2_50)), se_ABC=rowSds(as.matrix(clust2_50))/sqrt(ncol(clust2_50)), confint_ABC=1.96*se_ABC)
clust2_50mean = clust2_50mean[,-c(1:16)]
clust2_50mean$Depth = as.numeric(clust2_50mean$Depth)
plot(clust2_50mean$ABC, clust2_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 2", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,25), ylim=c(1000,0), col="#00CCCC")
#add polygon (confidence interval
polygon(x=c(clust2_50mean$ABC - clust2_50mean$confint_ABC,rev(clust2_50mean$ABC + clust2_50mean$confint_ABC)),y=c(clust2_50mean$Depth,rev(clust2_50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_50mean$ABC, clust2_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", main="Cluster 2",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,25), ylim=c(1000,0), col="#00CCCC")
#initialize plot
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,30), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_50mean$ABC - clust1_50mean$confint_ABC,rev(clust1_50mean$ABC + clust1_50mean$confint_ABC)),y=c(clust1_50mean$Depth,rev(clust1_50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.11))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_50mean$ABC, clust1_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,30), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust2_50mean$ABC - clust2_50mean$confint_ABC,rev(clust2_50mean$ABC + clust2_50mean$confint_ABC)),y=c(clust2_50mean$Depth,rev(clust2_50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.11))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_50mean$ABC, clust2_50mean$Depth, type="l", lwd=3, xlab="ABC", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,30), ylim=c(1000,0), col="#00CCCC")
# Plot cluster profiles by backscatter proportion
clust1_s50 = data.frame(t(subset(ABC50night_scaleclust, cluster == 1)[,-21]))
clust2_s50 = data.frame(t(subset(ABC50night_scaleclust, cluster == 2)[,-21]))
clust1_s50mean <- clust1_s50 %>%
mutate(Depth = rownames(clust1_s50), bs_prop = rowMeans(clust1_s50), se_bsprop=rowSds(as.matrix(clust1_s50))/sqrt(ncol(clust1_s50)), confint_bsprop=1.96*se_bsprop)
clust1_s50mean = clust1_s50mean[,-c(1:17)]
clust1_s50mean$Depth = substring(clust1_s50mean$Depth, 2)
#ggplot(clust1_50mean, aes(x = Depth, y = ABC, group = 1)) + geom_line() + geom_ribbon(aes(ymin = ABC - se_ABC, ymax = ABC + se_ABC), alpha = 0.2) +
View(clust1_s50)
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", main="Cluster 1", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.4), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_s50mean$bs_prop - clust1_s50mean$confint_bsprop,rev(clust1_s50mean$bs_prop + clust1_s50mean$confint_bsprop)),y=c(clust1_s50mean$Depth,rev(clust1_s50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", main="Cluster 1",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.4), ylim=c(1000,0), col="red")
clust2_s50mean <- clust2_s50 %>%
mutate(Depth = rownames(clust2_s50), bs_prop = rowMeans(clust2_s50), se_bsprop=rowSds(as.matrix(clust2_s50))/sqrt(ncol(clust2_s50)), confint_bsprop=1.96*se_bsprop)
clust2_s50mean = clust2_s50mean[,-c(1:16)]
clust2_s50mean$Depth = substring(clust2_s50mean$Depth, 2)
plot(clust2_s50mean$bs_prop, clust2_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", main="Cluster 2", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.4), ylim=c(1000,0), col="#00CCCC")
#add polygon (confidence interval
polygon(x=c(clust2_s50mean$bs_prop - clust2_s50mean$confint_bsprop,rev(clust2_s50mean$bs_prop + clust2_s50mean$confint_bsprop)),y=c(clust2_s50mean$Depth,rev(clust2_s50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.15))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_s50mean$bs_prop, clust2_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", main="Cluster 2",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.4), ylim=c(1000,0), col="#00CCCC")
#initialize plot
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.6), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_s50mean$bs_prop - clust1_s50mean$confint_bsprop,rev(clust1_s50mean$bs_prop + clust1_s50mean$confint_bsprop)),y=c(clust1_s50mean$Depth,rev(clust1_s50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.11))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.6), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust2_s50mean$bs_prop - clust2_s50mean$confint_bsprop,rev(clust2_s50mean$bs_prop + clust2_s50mean$confint_bsprop)),y=c(clust2_s50mean$Depth,rev(clust2_s50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.2))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_s50mean$bs_prop, clust2_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.6), ylim=c(1000,0), col="#00CCCC")
#initialize plot
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)", cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.8), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust1_s50mean$bs_prop - clust1_s50mean$confint_bsprop,rev(clust1_s50mean$bs_prop + clust1_s50mean$confint_bsprop)),y=c(clust1_s50mean$Depth,rev(clust1_s50mean$Depth)), border=NA, col= adjustcolor("red", alpha.f=0.11))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust1_s50mean$bs_prop, clust1_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.8), ylim=c(1000,0), col="red")
#add polygon (confidence interval
polygon(x=c(clust2_s50mean$bs_prop - clust2_s50mean$confint_bsprop,rev(clust2_s50mean$bs_prop + clust2_s50mean$confint_bsprop)),y=c(clust2_s50mean$Depth,rev(clust2_s50mean$Depth)), border=NA, col= adjustcolor("#00CCCC", alpha.f=0.2))
# Have to replot line over shaded conf.int
par(new=T)
plot(clust2_s50mean$bs_prop, clust2_s50mean$Depth, type="l", lwd=3, xlab="Backscatter Proportion", ylab="Depth (m)",cex.lab=1.2, cex.axis = 1.2, xlim = c(0,0.8), ylim=c(1000,0), col="#00CCCC")
###############################
# Combine cluster results with daytime environmental variables
nighttime <- read.csv("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/FullWC_Nighttime_nightmeans_sa_env.csv")
formap50 = data.frame(cbind(rownames(ABC50night_matclust), ABC50night_matclust$cluster))
formap50 = cbind(formap50, nighttime$lat, nighttime$lon)
###############################
# Combine cluster results with daytime environmental variables
nighttime <- read.csv("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/FullWC_Nighttime_nightmeans_sa_env.csv")
View(nighttime)
View(km50_south)
View(ABC50night_matclust)
###############################
# Combine cluster results with daytime environmental variables
nighttime <- read.csv("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/FullWC_Nighttime_nightmeans_sa_env.csv")
library(rgdal)
library(broom)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(viridis)
library(ggforce)
formap50 = data.frame(cbind(rownames(ABC50night_matclust), ABC50night_matclust$cluster))
formap50 = cbind(formap50, nighttime$lat, nighttime$lon)
View(nighttime)
library(lubridate)
# Import and merge .csv files into one mega dataframe
setwd("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/Nighttime_FullWC_38kHz")
# Import and merge .csv files into one mega dataframe
setwd("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/Nighttime_FullWC_38kHz")
setwd("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/Nighttime_FullWC_38kHz")
# Import and merge .csv files into one mega dataframe
setwd("D:/DeepSeaFishEcologyLab/Saildrone_CCZ/NORI-D/Spring/Mission/EK80/echo_results/Area_Backscatter/Nighttime_FullWC_38kHz")
temp = list.files(pattern="*.csv")
class1_night <- do.call(rbind,lapply(temp,read.csv))
class1_night$latmean = as.numeric((class1_night$Lat_S+class1_night$Lat_E)/2)
class1_night$lonmean = as.numeric((class1_night$Lon_S+class1_night$Lon_E)/2)
class1_night$Time_S = as.POSIXct(class1_night$Time_S, format = "%d/%m/%Y %H:%M:%S", tz = "UTC") # Keep in UTC for now
#class1_night$date = with_tz(class1_night$Time_S, tz="HST")
class1_night$date = as.POSIXct(format(as.POSIXct(class1_night$Time_S,format="%Y-%m-%d %H:%M:%S"),"%Y-%m-%d"), tz = "UTC")
# Subset dataset for columns of interest
class_nightsub = class1_night[,c(4,5,13,14,15,25,32:34,40:42)]
class_nightsub$Depth_max = round(class_nightsub$Depth_max)
class_nightsub$Depth_mean = round(class_nightsub$Depth_mean)
class_nightsub$date = as.Date(class_nightsub$date)
class_nightsub[sapply(class_nightsub, is.nan)] <- NA
class_nightsub = class_nightsub[complete.cases(class_nightsub),]
class_nightsub = subset(class_nightsub, Depth_max <= 1000)
library(plyr)
library(dplyr)
#50 m
for (i in 1:length(class_nightsub$Depth_max)) {
if(class_nightsub$Depth_max[i] <=50) {
class_nightsub$group[i] = 1 }
else if(class_nightsub$Depth_max[i] >50 & class_nightsub$Depth_max[i] <=100) {
class_nightsub$group[i] = 2 }
else if(class_nightsub$Depth_max[i] >100 & class_nightsub$Depth_max[i] <=150) {
class_nightsub$group[i] = 3 }
else if(class_nightsub$Depth_max[i] >150 & class_nightsub$Depth_max[i] <=200) {
class_nightsub$group[i] = 4 }
else if(class_nightsub$Depth_max[i] >200 & class_nightsub$Depth_max[i] <=250) {
class_nightsub$group[i] = 5 }
else if(class_nightsub$Depth_max[i] >250 & class_nightsub$Depth_max[i] <=300) {
class_nightsub$group[i] = 6 }
else if(class_nightsub$Depth_max[i] >300 & class_nightsub$Depth_max[i] <=350) {
class_nightsub$group[i] = 7 }
else if(class_nightsub$Depth_max[i] >350 & class_nightsub$Depth_max[i] <=400) {
class_nightsub$group[i] = 8 }
else if(class_nightsub$Depth_max[i] >400 & class_nightsub$Depth_max[i] <=450) {
class_nightsub$group[i] = 9 }
else if(class_nightsub$Depth_max[i] >450 & class_nightsub$Depth_max[i] <=500) {
class_nightsub$group[i] = 10 }
else if(class_nightsub$Depth_max[i] >500 & class_nightsub$Depth_max[i] <=550) {
class_nightsub$group[i] = 11 }
else if(class_nightsub$Depth_max[i] >550 & class_nightsub$Depth_max[i] <=600) {
class_nightsub$group[i] = 12 }
else if(class_nightsub$Depth_max[i] >600 & class_nightsub$Depth_max[i] <=650) {
class_nightsub$group[i] = 13 }
else if(class_nightsub$Depth_max[i] >650 & class_nightsub$Depth_max[i] <=700) {
class_nightsub$group[i] = 14 }
else if(class_nightsub$Depth_max[i] >700 & class_nightsub$Depth_max[i] <=750) {
class_nightsub$group[i] = 15 }
else if(class_nightsub$Depth_max[i] >750 & class_nightsub$Depth_max[i] <=800) {
class_nightsub$group[i] = 16 }
else if(class_nightsub$Depth_max[i] >800 & class_nightsub$Depth_max[i] <=850) {
class_nightsub$group[i] = 17 }
else if(class_nightsub$Depth_max[i] >850 & class_nightsub$Depth_max[i] <=900) {
class_nightsub$group[i] = 18 }
else if(class_nightsub$Depth_max[i] >900 & class_nightsub$Depth_max[i] <=950) {
class_nightsub$group[i] = 19 }
else if(class_nightsub$Depth_max[i] >950 & class_nightsub$Depth_max[i] <=1000) {
class_nightsub$group[i] = 20 }
}
ABC_50m_night <- class_nightsub %>% group_by(date, Vert_Slice_Idx, group) %>%
summarize(ABC = sum(ABC), Depth_mean = mean(Depth_max), Depth_max = max(Depth_max), lonmean = mean(lonmean), latmean = mean(latmean), date = min(date), .groups = 'keep')
View(ABC_50m_night)
